/*******************************************************************************
 * Copyright 2016 University of Mannheim
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *          http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/

buildscript {
    ext {
        springBootVersion = '1.3.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE')
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'

jar {
    baseName = 'spa-rest'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

task buildDocker(type: Docker, dependsOn: build) {
    applicationName = jar.baseName
    dockerfile = file('../docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

task runDockerContainer(type: Exec, dependsOn: buildDocker){
    commandLine 'docker', 'run', '--name=spa-rest', '-p', '8080:8080', '-d', 'spa-core/spa-rest'
}

dependencies {
    compile project(':core')
    compile('org.springframework.data:spring-data-rest-webmvc:2.4.2.RELEASE')
    compile('org.springframework:spring-context:4.2.1.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-data-rest'){
        exclude module: "spring-boot-starter-logging"
        exclude module: "logback-classic"
    }
    compile('org.springframework.boot:spring-boot-starter-hateoas'){
        exclude module: "spring-boot-starter-logging"
        exclude module: "logback-classic"
    }
    compile 'com.google.guava:guava:18.0'

    compile 'com.noodlesandwich:rekord-core:0.3'
    compile 'com.noodlesandwich:rekord-jackson:0.3'

    testCompile('org.springframework.boot:spring-boot-starter-test'){
        exclude module: "spring-boot-starter-logging"
        exclude module: "logback-classic"
    }
    testCompile('junit:junit:4.12')
    testCompile('org.hamcrest:hamcrest-all:1.3')
    testCompile('org.mockito:mockito-core:1.+')
    testCompile('commons-io:commons-io:2.4')
    testCompile('com.jayway.jsonpath:json-path:2.1.0')
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}
